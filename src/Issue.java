/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * StudentIssue.java
 *
 * Created on Feb 28, 2010, 3:23:00 PM
 */

import javax.swing.JOptionPane;
import java.util.Date;
import java.util.Calendar;
import java.text.ParseException;
import java.text.DateFormat;

/**
 *
 * @author Rohit Aggarwal
 */
public class Issue extends javax.swing.JFrame {

    IssueQuery query_class;
    static String member_id, reference_no;
    static Calendar date_of_issue = Calendar.getInstance(), date_of_return = Calendar.getInstance();

    /** Creates new form StudentIssue */
    public Issue() {
        initComponents();
        jLabel1.setText(ServerDetails.library_name);
        jLabel1.setSize(jLabel1.getPreferredSize());
        jLabel2.setSize(jLabel2.getPreferredSize());
        jLabel3.setSize(jLabel3.getPreferredSize());
        jLabel4.setSize(jLabel4.getPreferredSize());
        jLabel5.setSize(jLabel5.getPreferredSize());
        jButton1.setSize(jButton1.getPreferredSize());
        jButton2.setSize(jButton2.getPreferredSize());
        jButton3.setSize(jButton3.getPreferredSize());
        jComboBox1.setSize(jComboBox1.getPreferredSize());
        jComboBox2.setSize(jComboBox2.getPreferredSize());
        jComboBox4.setSize(jComboBox4.getPreferredSize());
        jComboBox5.setSize(jComboBox5.getPreferredSize());
        if(ServerDetails.database == Database.MSACCESS)
        {
           //query_class = new IssueMSSQL();
        }
        else if(ServerDetails.database == Database.SQLSERVER)
        {
           query_class = new IssueMSSQL();
        }
        else if(ServerDetails.database == Database.MYSQL)
        {
            query_class = new IssueMYSQL();
        }
        else if(ServerDetails.database == Database.POSTGRESQL)
        {
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jComboBox2 = new javax.swing.JComboBox();
        jComboBox3 = new javax.swing.JComboBox();
        jComboBox4 = new javax.swing.JComboBox();
        jComboBox5 = new javax.swing.JComboBox();
        jComboBox6 = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Book Issue");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Bookman Old Style", 0, 24));
        jLabel1.setText("Library Name");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(100, 20, 161, 29);

        jLabel2.setFont(new java.awt.Font("Century Schoolbook", 0, 16));
        jLabel2.setText("Member ID");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(20, 75, 84, 20);

        jLabel3.setFont(new java.awt.Font("Century Schoolbook", 0, 16));
        jLabel3.setText("Reference No.");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(20, 110, 102, 20);

        jLabel4.setFont(new java.awt.Font("Century Schoolbook", 0, 16));
        jLabel4.setText("Date of Issue");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(20, 145, 95, 20);

        jTextField1.setFont(new java.awt.Font("Century Schoolbook", 0, 16));
        getContentPane().add(jTextField1);
        jTextField1.setBounds(150, 70, 175, 26);

        jTextField2.setFont(new java.awt.Font("Century Schoolbook", 0, 16));
        getContentPane().add(jTextField2);
        jTextField2.setBounds(150, 105, 175, 26);

        jButton1.setFont(new java.awt.Font("Century Schoolbook", 0, 16));
        jButton1.setText("Enter");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(20, 225, 75, 29);

        jButton2.setFont(new java.awt.Font("Century Schoolbook", 0, 16));
        jButton2.setText("Next");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(150, 225, 69, 29);

        jButton3.setFont(new java.awt.Font("Century Schoolbook", 0, 16));
        jButton3.setText("Cancel");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(275, 225, 83, 29);

        jLabel5.setFont(new java.awt.Font("Century Schoolbook", 0, 16)); // NOI18N
        jLabel5.setText("Date of Return");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(20, 180, 109, 20);

        jComboBox1.setFont(new java.awt.Font("Century Schoolbook", 0, 16));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        getContentPane().add(jComboBox1);
        jComboBox1.setBounds(150, 140, 49, 26);

        jComboBox2.setFont(new java.awt.Font("Century Schoolbook", 0, 16));
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        getContentPane().add(jComboBox2);
        jComboBox2.setBounds(205, 140, 110, 26);

        jComboBox3.setFont(new java.awt.Font("Century Schoolbook", 0, 16));
        getContentPane().add(jComboBox3);
        jComboBox3.setBounds(325, 140, 35, 26);

        jComboBox4.setFont(new java.awt.Font("Century Schoolbook", 0, 16));
        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        getContentPane().add(jComboBox4);
        jComboBox4.setBounds(150, 175, 49, 26);

        jComboBox5.setFont(new java.awt.Font("Century Schoolbook", 0, 16));
        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        getContentPane().add(jComboBox5);
        jComboBox5.setBounds(205, 175, 110, 26);

        jComboBox6.setFont(new java.awt.Font("Century Schoolbook", 0, 16));
        getContentPane().add(jComboBox6);
        jComboBox6.setBounds(325, 175, 35, 26);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-400)/2, (screenSize.height-300)/2, 400, 300);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        if(check_data() == true)
        {
            member_id = jTextField1.getText();
            reference_no = jTextField2.getText();
            date_of_issue.clear();
            date_of_issue.set(Integer.parseInt(jComboBox3.getSelectedItem().toString()), jComboBox2.getSelectedIndex(), Integer.parseInt(jComboBox1.getSelectedItem().toString()));
            date_of_return.clear();
            date_of_return.set(Integer.parseInt(jComboBox6.getSelectedItem().toString()), jComboBox5.getSelectedIndex(), Integer.parseInt(jComboBox4.getSelectedItem().toString()));
            if(query_class.check_member() == true)
            {
                if(query_class.check_book() == true)
                {
                    if(query_class.check_book_count() == true)
                    {
                        query_class.insert_values();
                        this.dispose();
                        if(ServerDetails.invoker == Invoker.ADMINISTRATOR)
                        {
                            AdministratorPage admin_page = new AdministratorPage();
                            admin_page.show();
                        }
                        else if(ServerDetails.invoker == Invoker.LIBRARIAN)
                        {
                            LibrarianPage librarian_page = new LibrarianPage();
                            librarian_page.show();
                        }
                        else if(ServerDetails.invoker == Invoker.EMPLOYEE)
                        {
                            EmployeePage employee_page = new EmployeePage();
                            employee_page.show();
                        }
                        else
                            System.exit(0);
                    }
                    else
                        JOptionPane.showMessageDialog(this, "Member:" + member_id + " has reached the maximum book count.", "Maximum Count", JOptionPane.WARNING_MESSAGE);
                }
                else
                    JOptionPane.showMessageDialog(this, "Book:" + reference_no + " is not available for issue.", "Invalid Reference No.", JOptionPane.WARNING_MESSAGE);
            }
            else
                JOptionPane.showMessageDialog(this, "Member:" + member_id + " doesn't exists in the database.", "Invalid MemberID", JOptionPane.WARNING_MESSAGE);
        }
        else
            JOptionPane.showMessageDialog(this, "Correct the highlighted items before proceeding", "Incorrect Data", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        if(check_data() == true)
        {
            member_id = jTextField1.getText();
            reference_no = jTextField2.getText();
            date_of_issue.clear();
            date_of_issue.set(Integer.parseInt(jComboBox3.getSelectedItem().toString()), jComboBox2.getSelectedIndex(), Integer.parseInt(jComboBox1.getSelectedItem().toString()));
            date_of_return.clear();
            date_of_return.set(Integer.parseInt(jComboBox6.getSelectedItem().toString()), jComboBox5.getSelectedIndex(), Integer.parseInt(jComboBox4.getSelectedItem().toString()));
            if(query_class.check_member() == true)
            {
                if(query_class.check_book() == true)
                {
                    if(query_class.check_book_count() == true)
                    {
                        query_class.insert_values();
                        jTextField1.setText(null);
                        jTextField2.setText(null);
                    }
                    else
                        JOptionPane.showMessageDialog(this, "Member:" + member_id + " has reached the maximum book count.", "Maximum Count", JOptionPane.WARNING_MESSAGE);
                }
                else
                    JOptionPane.showMessageDialog(this, "Book:" + reference_no + " is not available for issue.", "Invalid Reference No.", JOptionPane.WARNING_MESSAGE);
            }
            else
                JOptionPane.showMessageDialog(this, "Member:" + member_id + " doesn't exists in the database.", "Invalid MemberID", JOptionPane.WARNING_MESSAGE);
        }
        else
            JOptionPane.showMessageDialog(this, "Correct the highlighted items before proceeding", "Incorrect Data", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
        this.dispose();
        if(ServerDetails.invoker == Invoker.ADMINISTRATOR)
        {
            AdministratorPage admin_page = new AdministratorPage();
            admin_page.show();
        }
        else if(ServerDetails.invoker == Invoker.LIBRARIAN)
        {
            LibrarianPage librarian_page = new LibrarianPage();
            librarian_page.show();
        }
        else if(ServerDetails.invoker == Invoker.EMPLOYEE)
        {
            EmployeePage employee_page = new EmployeePage();
            employee_page.show();
        }
        else
            System.exit(0);
    }//GEN-LAST:event_jButton3MouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        Calendar now = Calendar.getInstance();
        now.setTime(new java.util.Date());
        jComboBox1.setSelectedItem(now.get(Calendar.DATE));
        jComboBox2.setSelectedIndex(now.get(Calendar.MONTH) - 1);
        jComboBox3.addItem(now.get(Calendar.YEAR));
        jComboBox3.setSize(jComboBox3.getPreferredSize());
        jComboBox1.setFocusable(false);
        jComboBox2.setFocusable(false);
        jComboBox3.setFocusable(false);
        for(int i = now.get(Calendar.YEAR); i <= now.get(Calendar.YEAR)+1; i++)
            jComboBox6.addItem(i);
        jComboBox6.setSize(jComboBox6.getPreferredSize());
        jComboBox4.setSelectedItem(now.get(Calendar.DATE));
        jComboBox5.setSelectedIndex(now.get(Calendar.MONTH) - 1);
        jComboBox6.addItem(now.get(Calendar.YEAR));        
    }//GEN-LAST:event_formWindowOpened

    private boolean check_data()
    {
        boolean return_value=true;

        if(jTextField1.getText() == null || jTextField1.getText().compareTo("") == 0)
        {
            jLabel2.setText("<html><font color='red'>Member ID");
            return_value = false;
        }
        else
            jLabel2.setText("Member ID");

        if(jTextField2.getText() == null || jTextField2.getText().compareTo("") == 0)
        {
            jLabel3.setText("<html><font color='red'>Reference No.");
            return_value = false;
        }
        else
            jLabel3.setText("Reference No.");

        if(check_return_date() == false)
        {
            jLabel5.setText("<html><font color='red'>Date of Return");
            return_value = false;
        }
        else
            jLabel5.setText("Date of Return");

        return(return_value);
    }

    private boolean check_return_date()
    {
        boolean return_value = true;
        String date = (jComboBox5.getSelectedIndex()+1) + "/" + jComboBox4.getSelectedItem().toString() + "/" + jComboBox6.getSelectedItem().toString();

        try
        {
            DateFormat date_format = DateFormat.getDateInstance(DateFormat.SHORT);
            date_format.setLenient(false);
            Date temp_date = date_format.parse(date);
        }
        catch(ParseException e)
        {
            return_value = false;
        }

        return(return_value);
    }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Issue().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JComboBox jComboBox5;
    private javax.swing.JComboBox jComboBox6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables

}
