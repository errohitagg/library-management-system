/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * IndexPage.java
 *
 * Created on Dec 26, 2009, 12:25:24 AM
 */

import javax.swing.*;

/**
 *
 * @author Rohit Aggarwal
 */
public class AdministratorPage extends javax.swing.JFrame {

    AdministratorPageQuery query_class;

    static String member_id, membership, isbn_no, reference_no;

    /** Creates new form IndexPage */
    public AdministratorPage() {
        initComponents();
        jLabel1.setSize(jLabel1.getPreferredSize());
        jLabel2.setSize(jLabel2.getPreferredSize());
        jLabel3.setSize(jLabel3.getPreferredSize());
        jLabel4.setSize(jLabel4.getPreferredSize());
        jLabel5.setSize(jLabel5.getPreferredSize());
        jLabel6.setSize(jLabel6.getPreferredSize());
        jLabel7.setSize(jLabel7.getPreferredSize());
        jButton1.setSize(jButton1.getPreferredSize());
        if(ServerDetails.database == Database.MSACCESS)
        {
            //query_class = new AdministratorPageAcess;
        }
        else if(ServerDetails.database == Database.SQLSERVER)
        {
            query_class = new AdministratorPageMSSQL();
        }
        else if(ServerDetails.database == Database.MYSQL)
        {
            query_class = new AdministratorPageMYSQL();
        }
        else if(ServerDetails.database == Database.POSTGRESQL)
        {
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu2 = new javax.swing.JPopupMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jPopupMenu3 = new javax.swing.JPopupMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jPopupMenu4 = new javax.swing.JPopupMenu();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jPopupMenu5 = new javax.swing.JPopupMenu();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenuItem15 = new javax.swing.JMenuItem();
        jMenuItem16 = new javax.swing.JMenuItem();
        jMenuItem17 = new javax.swing.JMenuItem();
        jMenuItem18 = new javax.swing.JMenuItem();
        jMenuItem19 = new javax.swing.JMenuItem();
        jMenuItem20 = new javax.swing.JMenuItem();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        jPopupMenu2.setInvoker(jLabel4);

        jMenuItem4.setFont(new java.awt.Font("Century Schoolbook", 0, 16));
        jMenuItem4.setText("New");
        jMenuItem4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem4MousePressed(evt);
            }
        });
        jPopupMenu2.add(jMenuItem4);

        jMenuItem5.setFont(new java.awt.Font("Century Schoolbook", 0, 16));
        jMenuItem5.setText("Edit");
        jMenuItem5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem5MousePressed(evt);
            }
        });
        jPopupMenu2.add(jMenuItem5);

        jMenuItem6.setFont(new java.awt.Font("Century Schoolbook", 0, 16));
        jMenuItem6.setText("Delete");
        jMenuItem6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem6MousePressed(evt);
            }
        });
        jPopupMenu2.add(jMenuItem6);

        jMenuItem11.setFont(new java.awt.Font("Century Schoolbook", 0, 16));
        jMenuItem11.setText("Display");
        jMenuItem11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem11MousePressed(evt);
            }
        });
        jPopupMenu2.add(jMenuItem11);

        jPopupMenu1.setInvoker(jLabel3);

        jMenuItem1.setFont(new java.awt.Font("Century Schoolbook", 0, 16));
        jMenuItem1.setText("New");
        jMenuItem1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem1MousePressed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem1);

        jMenuItem2.setFont(new java.awt.Font("Century Schoolbook", 0, 16));
        jMenuItem2.setText("Edit");
        jMenuItem2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem2MousePressed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem2);

        jMenuItem3.setFont(new java.awt.Font("Century Schoolbook", 0, 16));
        jMenuItem3.setText("Delete");
        jMenuItem3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem3MousePressed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem3);

        jMenuItem12.setFont(new java.awt.Font("Century Schoolbook", 0, 16));
        jMenuItem12.setText("Display");
        jMenuItem12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem12MousePressed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem12);

        jPopupMenu3.setInvoker(jLabel5);

        jMenuItem7.setFont(new java.awt.Font("Century Schoolbook", 0, 16));
        jMenuItem7.setText("Personal Details");
        jMenuItem7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem7MousePressed(evt);
            }
        });
        jPopupMenu3.add(jMenuItem7);

        jMenuItem8.setFont(new java.awt.Font("Century Schoolbook", 0, 16));
        jMenuItem8.setText("Change Password");
        jMenuItem8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem8MousePressed(evt);
            }
        });
        jPopupMenu3.add(jMenuItem8);

        jPopupMenu4.setInvoker(jLabel2);

        jMenuItem9.setFont(new java.awt.Font("Century Schoolbook", 0, 16));
        jMenuItem9.setText("Edit Details");
        jMenuItem9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem9MousePressed(evt);
            }
        });
        jPopupMenu4.add(jMenuItem9);

        jMenuItem10.setFont(new java.awt.Font("Century Schoolbook", 0, 16));
        jMenuItem10.setText("Display Details");
        jMenuItem10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem10MousePressed(evt);
            }
        });
        jPopupMenu4.add(jMenuItem10);

        jPopupMenu5.setInvoker(jLabel6);

        jMenuItem13.setFont(new java.awt.Font("Century Schoolbook", 0, 16));
        jMenuItem13.setText("New Book");
        jMenuItem13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem13MousePressed(evt);
            }
        });
        jPopupMenu5.add(jMenuItem13);

        jMenuItem15.setFont(new java.awt.Font("Century Schoolbook", 0, 16));
        jMenuItem15.setText("Display Book");
        jMenuItem15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem15MousePressed(evt);
            }
        });
        jPopupMenu5.add(jMenuItem15);

        jMenuItem16.setFont(new java.awt.Font("Century Schoolbook", 0, 16));
        jMenuItem16.setText("Issue Book");
        jMenuItem16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem16MousePressed(evt);
            }
        });
        jPopupMenu5.add(jMenuItem16);

        jMenuItem17.setFont(new java.awt.Font("Century Schoolbook", 0, 16));
        jMenuItem17.setText("ReIssue Book");
        jMenuItem17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem17MousePressed(evt);
            }
        });
        jPopupMenu5.add(jMenuItem17);

        jMenuItem18.setFont(new java.awt.Font("Century Schoolbook", 0, 16));
        jMenuItem18.setText("Return Book");
        jMenuItem18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem18MousePressed(evt);
            }
        });
        jPopupMenu5.add(jMenuItem18);

        jMenuItem19.setFont(new java.awt.Font("Century Schoolbook", 0, 16));
        jMenuItem19.setText("Delete Book");
        jMenuItem19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem19MousePressed(evt);
            }
        });
        jPopupMenu5.add(jMenuItem19);

        jMenuItem20.setFont(new java.awt.Font("Century Schoolbook", 0, 16));
        jMenuItem20.setText("Search Book");
        jMenuItem20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem20MousePressed(evt);
            }
        });
        jPopupMenu5.add(jMenuItem20);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Index Page - Administrator");
        setResizable(false);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Bookman Old Style", 0, 24));
        jLabel1.setText("Administrator's Page");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(70, 20, 243, 29);

        jButton1.setFont(new java.awt.Font("Century Schoolbook", 0, 16));
        jButton1.setText("Exit Application");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(125, 245, 153, 29);

        jLabel2.setFont(new java.awt.Font("Century Schoolbook", 0, 16));
        jLabel2.setText("<html><u>Library Details");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel2);
        jLabel2.setBounds(50, 75, 113, 20);

        jLabel4.setFont(new java.awt.Font("Century Schoolbook", 0, 16));
        jLabel4.setText("<html><u>Member");
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel4);
        jLabel4.setBounds(50, 100, 61, 20);

        jLabel5.setFont(new java.awt.Font("Century Schoolbook", 0, 16));
        jLabel5.setText("<html><u>Edit Details");
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel5);
        jLabel5.setBounds(50, 175, 88, 20);

        jLabel3.setFont(new java.awt.Font("Century Schoolbook", 0, 16));
        jLabel3.setText("<html><u>Membership");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel3);
        jLabel3.setBounds(50, 125, 92, 20);

        jLabel6.setFont(new java.awt.Font("Century Schoolbook", 0, 16));
        jLabel6.setText("<html><u>Books");
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel6);
        jLabel6.setBounds(50, 150, 44, 20);

        jLabel7.setFont(new java.awt.Font("Century Schoolbook", 0, 16));
        jLabel7.setText("<html><u>Logout");
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel7);
        jLabel7.setBounds(50, 200, 52, 20);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-375)/2, (screenSize.height-325)/2, 375, 325);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
       System.exit(0);
    }//GEN-LAST:event_jButton1MouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
        if(query_class.check_library() == true)
        {
            jPopupMenu4.show(jLabel2, 90, 10);
        }
        else
        {
            jPopupMenu2.disable();
            this.dispose();            
            LibraryDetails library_details = new LibraryDetails();
            library_details.show();
        }
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        // TODO add your handling code here:
        if(query_class.check_member() == false)
        {
            jMenuItem5.hide();
            jMenuItem5.disable();
            jMenuItem6.hide();
            jMenuItem6.disable();
            jMenuItem11.hide();
            jMenuItem11.disable();
        }
        jPopupMenu2.show(jLabel4, 60, 10);
    }//GEN-LAST:event_jLabel4MouseClicked

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        // TODO add your handling code here:
        jPopupMenu3.show(jLabel5, 80, 10);
    }//GEN-LAST:event_jLabel5MouseClicked

    private void jMenuItem5MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem5MousePressed
        // TODO add your handling code here:
        jPopupMenu2.setVisible(false);
        this.dispose();
        do
        {
            EditMemberDetails.member_id = JOptionPane.showInputDialog(this, "Enter the Member ID:", "Enter Member ID", JOptionPane.QUESTION_MESSAGE);
            if(EditMemberDetails.member_id == null)
            {
                AdministratorPage admin_page = new AdministratorPage();
                admin_page.show();
                break;
            }
            else if(EditMemberDetails.member_id.length() != 0)
            {
                member_id = EditMemberDetails.member_id;
                if(query_class.check_member_id() == true)
                {
                    EditMemberDetails edit_member_details = new EditMemberDetails();
                    edit_member_details.show();
                    break;
                }
                else
                {
                    int answer = JOptionPane.showConfirmDialog(this, "Employee: " + EditMemberDetails.member_id + " doesn't exists in the database.\nWant to try Again?" , "Invalid Employee Code", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                    if(answer == JOptionPane.NO_OPTION)
                    {
                        AdministratorPage admin_page = new AdministratorPage();
                        admin_page.show();
                        break;
                    }
                }
            }
        }while(true);
}//GEN-LAST:event_jMenuItem5MousePressed

    private void jMenuItem4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem4MousePressed
        // TODO add your handling code here:
        this.dispose();
        NewMember new_member = new NewMember();
        new_member.show();
}//GEN-LAST:event_jMenuItem4MousePressed

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // TODO add your handling code here:
        if(query_class.check_member_type() == false)
        {
            jMenuItem2.hide();
            jMenuItem2.disable();
            jMenuItem3.hide();
            jMenuItem3.disable();
            jMenuItem12.hide();
            jMenuItem12.disable();
        }
        jPopupMenu1.show(jLabel3, 80, 10);
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        // TODO add your handling code here:
        if(query_class.check_book() == false)
        {
            jMenuItem15.hide();
            jMenuItem15.disable();
            jMenuItem16.hide();
            jMenuItem16.disable();
            jMenuItem17.hide();
            jMenuItem17.disable();
            jMenuItem18.hide();
            jMenuItem18.disable();
            jMenuItem19.hide();
            jMenuItem19.disable();
            jMenuItem20.hide();
            jMenuItem20.disable();
        }
        jPopupMenu5.show(jLabel6, 60, 10);
}//GEN-LAST:event_jLabel6MouseClicked

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        // TODO add your handling code here:
        this.dispose();
        Login login = new Login();
        login.show();
}//GEN-LAST:event_jLabel7MouseClicked

    private void jMenuItem6MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem6MousePressed
        // TODO add your handling code here:
        jPopupMenu2.setVisible(false);
        this.dispose();
        do
        {
            member_id = JOptionPane.showInputDialog(this, "Enter the Member ID: ", "Enter Member ID", JOptionPane.QUESTION_MESSAGE);
            if(member_id == null)
            {
                AdministratorPage admin_page = new AdministratorPage();
                admin_page.show();
                break;
            }
            else if(member_id.length() != 0)
            {
                if(member_id.trim().compareToIgnoreCase("admin") == 0)
                {
                    JOptionPane.showMessageDialog(this, "Can't delete Administrator from the database.", "Delete Error", JOptionPane.ERROR_MESSAGE);
                    AdministratorPage admin_page = new AdministratorPage();
                    admin_page.show();
                    break;
                }
                else if(query_class.check_member_id() == true)
                {
                    int answer = JOptionPane.showConfirmDialog(this, "Do you really want to delete Member: " + member_id, "Confirm Delete", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
                    if(answer == JOptionPane.YES_OPTION)
                    {
                        query_class.delete_member();
                        JOptionPane.showMessageDialog(this, "Member: " + member_id + " has been successfully deleted from the database.", "Successful Delete", JOptionPane.INFORMATION_MESSAGE);
                        AdministratorPage admin_page = new AdministratorPage();
                        admin_page.show();
                        break;
                    }
                    if(answer == JOptionPane.CANCEL_OPTION)
                    {
                        AdministratorPage admin_page = new AdministratorPage();
                        admin_page.show();
                        break;
                    }
                }
                else
                {
                    int answer = JOptionPane.showConfirmDialog(this, "Member: " + member_id + " doesn't exists in the database.\nWant to try Again?" , "Invalid Member ID", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                    if(answer == JOptionPane.NO_OPTION)
                    {
                        AdministratorPage admin_page = new AdministratorPage();
                        admin_page.show();
                        break;
                    }
                }
            }
        }while(true);
    }//GEN-LAST:event_jMenuItem6MousePressed

    private void jMenuItem11MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem11MousePressed
        // TODO add your handling code here:
        jPopupMenu2.setVisible(false);
        this.dispose();
        do
        {
            DisplayMember.member_id = JOptionPane.showInputDialog(this, "Enter the Member ID:", "Enter Member ID", JOptionPane.QUESTION_MESSAGE);
            if(DisplayMember.member_id == null)
            {
                AdministratorPage admin_page = new AdministratorPage();
                admin_page.show();
                break;
            }
            else if(DisplayMember.member_id.length() != 0)
            {
                member_id = DisplayMember.member_id;
                if(query_class.check_member_id() == true)
                {
                    DisplayMember display_member = new DisplayMember();
                    display_member.show();
                    break;
                }
                else
                {
                    int answer = JOptionPane.showConfirmDialog(this, "Employee: " + DisplayMember.member_id + " doesn't exists in the database.\nWant to try Again?" , "Invalid Employee Code", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                    if(answer == JOptionPane.NO_OPTION)
                    {
                        AdministratorPage admin_page = new AdministratorPage();
                        admin_page.show();
                        break;
                    }
                }
            }
        }while(true);
    }//GEN-LAST:event_jMenuItem11MousePressed

    private void jMenuItem1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem1MousePressed
        // TODO add your handling code here:
        this.dispose();
        NewMembership new_membership = new NewMembership();
        new_membership.show();
    }//GEN-LAST:event_jMenuItem1MousePressed

    private void jMenuItem2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem2MousePressed
        // TODO add your handling code here:
        jPopupMenu1.setVisible(false);
        this.dispose();
        do
        {
            EditMembership.membership = JOptionPane.showInputDialog(this, "Enter the Membership Type:", "Enter Membership", JOptionPane.QUESTION_MESSAGE);
            if(EditMembership.membership == null)
            {
                AdministratorPage admin_page = new AdministratorPage();
                admin_page.show();
                break;
            }
            else if(EditMembership.membership.length() != 0)
            {
                membership = EditMembership.membership;
                if(query_class.check_membership() == true)
                {
                    EditMembership edit_membership = new EditMembership();
                    edit_membership.show();
                    break;
                }
                else
                {
                    int answer = JOptionPane.showConfirmDialog(this, "Membership Type: " + EditMembership.membership + " doesn't exists in the database.\nWant to try Again?" , "Invalid Membership", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                    if(answer == JOptionPane.NO_OPTION)
                    {
                        AdministratorPage admin_page = new AdministratorPage();
                        admin_page.show();
                        break;
                    }
                }
            }
        }while(true);
    }//GEN-LAST:event_jMenuItem2MousePressed

    private void jMenuItem3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem3MousePressed
        // TODO add your handling code here:
        jPopupMenu1.setVisible(false);
        this.dispose();
        do
        {
            membership = JOptionPane.showInputDialog(this, "Enter the Membership Type: ", "Enter Membership", JOptionPane.QUESTION_MESSAGE);
            if(membership == null)
            {
                AdministratorPage admin_page = new AdministratorPage();
                admin_page.show();
                break;
            }
            else if(membership.length() != 0)
            {
                if(membership.trim().compareToIgnoreCase("Administrator") == 0 || membership.trim().compareToIgnoreCase("Librarian") == 0 ||
                        membership.trim().compareToIgnoreCase("Employee") == 0)
                {
                    JOptionPane.showMessageDialog(this, "Can't delete the membership from the database.", "Delete Error", JOptionPane.ERROR_MESSAGE);
                    AdministratorPage admin_page = new AdministratorPage();
                    admin_page.show();
                    break;
                }
                else if(query_class.check_membership() == true)
                {
                    int answer = JOptionPane.showConfirmDialog(this, "Do you really want to delete Membership: " + membership, "Confirm Delete", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
                    if(answer == JOptionPane.YES_OPTION)
                    {
                        query_class.delete_membership();
                        JOptionPane.showMessageDialog(this, "Membership: " + membership + " has been successfully deleted from the database.", "Successful Delete", JOptionPane.INFORMATION_MESSAGE);
                        AdministratorPage admin_page = new AdministratorPage();
                        admin_page.show();
                        break;
                    }
                    if(answer == JOptionPane.CANCEL_OPTION)
                    {
                        AdministratorPage admin_page = new AdministratorPage();
                        admin_page.show();
                        break;
                    }
                }
                else
                {
                    int answer = JOptionPane.showConfirmDialog(this, "Membership: " + membership + " doesn't exists in the database.\nWant to try Again?" , "Invalid Membership", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                    if(answer == JOptionPane.NO_OPTION)
                    {
                        AdministratorPage admin_page = new AdministratorPage();
                        admin_page.show();
                        break;
                    }
                }
            }
        }while(true);
    }//GEN-LAST:event_jMenuItem3MousePressed

    private void jMenuItem12MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem12MousePressed
        // TODO add your handling code here:
        this.dispose();
        DisplayMembership display_membership = new DisplayMembership();
        display_membership.show();
    }//GEN-LAST:event_jMenuItem12MousePressed

    private void jMenuItem7MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem7MousePressed
        // TODO add your handling code here:
        this.dispose();
        EditMemberDetails.member_id = query_class.retrieve_member_id();
        EditMemberDetails edit_member = new EditMemberDetails();
        edit_member.show();
    }//GEN-LAST:event_jMenuItem7MousePressed

    private void jMenuItem8MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem8MousePressed
        // TODO add your handling code here:
        this.dispose();
        ChangePassword change_password = new ChangePassword();
        change_password.show();
    }//GEN-LAST:event_jMenuItem8MousePressed

    private void jMenuItem9MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem9MousePressed
        // TODO add your handling code here:
        this.dispose();
        EditLibraryDetails edit_library_details = new EditLibraryDetails();
        edit_library_details.show();
    }//GEN-LAST:event_jMenuItem9MousePressed

    private void jMenuItem10MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem10MousePressed
        // TODO add your handling code here:
        this.dispose();
        DisplayLibraryDetails display_library_details = new DisplayLibraryDetails();
        display_library_details.show();
    }//GEN-LAST:event_jMenuItem10MousePressed

    private void jMenuItem13MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem13MousePressed
        // TODO add your handling code here:
        this.dispose();
        NewBook new_book = new NewBook();
        new_book.show();
    }//GEN-LAST:event_jMenuItem13MousePressed

    private void jMenuItem15MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem15MousePressed
        // TODO add your handling code here:
        jPopupMenu5.setVisible(false);
        this.dispose();
        do
        {
            DisplayBook.isbn_no = JOptionPane.showInputDialog(this, "Enter the ISBN Number of the Book: ", "Enter ISBN No.", JOptionPane.QUESTION_MESSAGE);
            if(DisplayBook.isbn_no == null)
            {
                AdministratorPage admin_page = new AdministratorPage();
                admin_page.show();
                break;
            }
            else if(DisplayBook.isbn_no.length() != 0)
            {
                isbn_no = DisplayBook.isbn_no;
                if(query_class.check_isbn_book() == true)
                {
                    DisplayBook display_book = new DisplayBook();
                    display_book.show();
                    break;
                }
                else
                {
                    int answer = JOptionPane.showConfirmDialog(this, "Book: " + DisplayBook.isbn_no + " doesn't exists in the database.\nWant to try Again?" , "Invalid ISBN No.", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                    if(answer == JOptionPane.NO_OPTION)
                    {
                        AdministratorPage admin_page = new AdministratorPage();
                        admin_page.show();
                        break;
                    }
                }
            }
        }while(true);
    }//GEN-LAST:event_jMenuItem15MousePressed

    private void jMenuItem16MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem16MousePressed
        // TODO add your handling code here:
        this.dispose();
        Issue issue_book = new Issue();
        issue_book.show();
    }//GEN-LAST:event_jMenuItem16MousePressed

    private void jMenuItem17MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem17MousePressed
        // TODO add your handling code here:
        jPopupMenu5.setVisible(false);
        this.dispose();
        do
        {
            JTextField member_id_field = new JTextField();
            JTextField reference_no_field = new JPasswordField();
            Object[] messsage = {"Enter the Member ID:", member_id_field, "Enter the Reference No. of the Book:", reference_no_field};

            JOptionPane option_pane = new JOptionPane(messsage, JOptionPane.QUESTION_MESSAGE, JOptionPane.OK_CANCEL_OPTION, null, null);

            JDialog dialog = option_pane.createDialog(this, "Enter ReIssue Details");
            dialog.setVisible(true);

            if(option_pane.getValue() == null)
            {
                AdministratorPage admin_page = new AdministratorPage();
                admin_page.show();
                break;
            }

            else if(member_id_field.getText().length() != 0)
            {
                member_id = member_id_field.getText();
                reference_no = reference_no_field.getText();
                if(query_class.check_member_reference() == true)
                {
                    ReIssue.member_id = member_id;
                    ReIssue.reference_no = reference_no;
                    ReIssue re_issue = new ReIssue();
                    re_issue.show();
                    break;
                }
                else
                {
                    int answer = JOptionPane.showConfirmDialog(this, "Member: " + member_id + " haven't issued Book: " + reference_no + ".\nWant to try Again?" , "Invalid ReIssue Details", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                    if(answer == JOptionPane.NO_OPTION)
                    {
                        AdministratorPage admin_page = new AdministratorPage();
                        admin_page.show();
                        break;
                    }
                }
            }
        }while(true);
    }//GEN-LAST:event_jMenuItem17MousePressed

    private void jMenuItem18MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem18MousePressed
        // TODO add your handling code here:
        jPopupMenu5.setVisible(false);
        this.dispose();
        do
        {
            JTextField member_id_field = new JTextField();
            JTextField reference_no_field = new JPasswordField();
            Object[] messsage = {"Enter the Member ID:", member_id_field, "Enter the Reference No. of he Book:", reference_no_field};

            JOptionPane option_pane = new JOptionPane(messsage, JOptionPane.QUESTION_MESSAGE, JOptionPane.OK_CANCEL_OPTION, null, null);

            JDialog dialog = option_pane.createDialog(this, "Enter Return Details");
            dialog.setVisible(true);

            if(option_pane.getValue() == null)
            {
                AdministratorPage admin_page = new AdministratorPage();
                admin_page.show();
                break;
            }
            else if(member_id_field.getText().length() != 0)
            {
                member_id = member_id_field.getText();
                reference_no = reference_no_field.getText();
                if(query_class.check_member_reference() == true)
                {
                    Return.member_id = member_id;
                    Return.reference_no = reference_no;
                    Return return_ = new Return();
                    return_.show();
                    break;
                }
                else
                {
                    int answer = JOptionPane.showConfirmDialog(this, "Member: " + member_id + "haven't issued Book: " + reference_no + ".\nWant to try Again?" , "Invalid Member Id", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                    if(answer == JOptionPane.NO_OPTION)
                    {
                        AdministratorPage admin_page = new AdministratorPage();
                        admin_page.show();
                        break;
                    }
                }
            }
        }while(true);
    }//GEN-LAST:event_jMenuItem18MousePressed

    private void jMenuItem19MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem19MousePressed
        // TODO add your handling code here:
        jPopupMenu5.setVisible(false);
        this.dispose();
        do
        {
            isbn_no = JOptionPane.showInputDialog(this, "Enter the ISBN No. of the Book: ", "Enter ISBN No.", JOptionPane.QUESTION_MESSAGE);
            if(isbn_no == null)
            {
                AdministratorPage admin_page = new AdministratorPage();
                admin_page.show();
                break;
            }
            else if(isbn_no.length() != 0)
            {
                if(query_class.check_isbn_book() == true)
                {
                    int answer = JOptionPane.showConfirmDialog(this, "Do you really want to delete Book: " + isbn_no, "Confirm Delete", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
                    if(answer == JOptionPane.YES_OPTION)
                    {
                        query_class.delete_book();
                        JOptionPane.showMessageDialog(this, "Book: " + isbn_no + " has been successfully deleted from the database.", "Successful Delete", JOptionPane.INFORMATION_MESSAGE);
                        AdministratorPage admin_page = new AdministratorPage();
                        admin_page.show();
                        break;
                    }
                    if(answer == JOptionPane.CANCEL_OPTION)
                    {
                        AdministratorPage admin_page = new AdministratorPage();
                        admin_page.show();
                        break;
                    }
                }
                else
                {
                    int answer = JOptionPane.showConfirmDialog(this, "Book: " + isbn_no + " doesn't exists in the database.\nWant to try Again?" , "Invalid ISBN No.", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                    if(answer == JOptionPane.NO_OPTION)
                    {
                        AdministratorPage admin_page = new AdministratorPage();
                        admin_page.show();
                        break;
                    }
                }
            }
        }while(true);
    }//GEN-LAST:event_jMenuItem19MousePressed

    private void jMenuItem20MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem20MousePressed
        // TODO add your handling code here:
        this.dispose();
        SearchBook search_book = new SearchBook();
        search_book.show();
    }//GEN-LAST:event_jMenuItem20MousePressed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdministratorPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem16;
    private javax.swing.JMenuItem jMenuItem17;
    private javax.swing.JMenuItem jMenuItem18;
    private javax.swing.JMenuItem jMenuItem19;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem20;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JPopupMenu jPopupMenu3;
    private javax.swing.JPopupMenu jPopupMenu4;
    private javax.swing.JPopupMenu jPopupMenu5;
    // End of variables declaration//GEN-END:variables

}
